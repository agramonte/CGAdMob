/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "CGAdMob.h"


#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
// For MIPs (and WP8) platform we do not have asm code for stack switching
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL_LOCK
#endif
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*CGAdMobRegister_t)(CGAdMobCallback cbid, s3eCallback fn, void* userData);
typedef  s3eResult(*CGAdMobUnRegister_t)(CGAdMobCallback cbid, s3eCallback fn);
typedef       void(*InitAdView_t)();
typedef  s3eResult(*ShowInterstitialAd_t)();
typedef       void(*SetGoogleAppKey_t)(const char* bannerAdUnitId, const char* interstatialAdUnitId);
typedef       void(*BannerAdLoad_t)();
typedef       void(*BannerAdShow_t)();
typedef       void(*BannerAdHide_t)();
typedef       void(*IsLandscape_t)(bool landscape);
typedef       void(*BannerAdPosition_t)(CGAdMobPosition position);
typedef       void(*TestDeviceHashedId_t)(const char* deviceHashId);
typedef       void(*Release_t)();

/**
 * struct that gets filled in by CGAdMobRegister
 */
typedef struct CGAdMobFuncs
{
    CGAdMobRegister_t m_CGAdMobRegister;
    CGAdMobUnRegister_t m_CGAdMobUnRegister;
    InitAdView_t m_InitAdView;
    ShowInterstitialAd_t m_ShowInterstitialAd;
    SetGoogleAppKey_t m_SetGoogleAppKey;
    BannerAdLoad_t m_BannerAdLoad;
    BannerAdShow_t m_BannerAdShow;
    BannerAdHide_t m_BannerAdHide;
    IsLandscape_t m_IsLandscape;
    BannerAdPosition_t m_BannerAdPosition;
    TestDeviceHashedId_t m_TestDeviceHashedId;
    Release_t m_Release;
} CGAdMobFuncs;

static CGAdMobFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0xbfdc71f2, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: CGAdMob");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0xbfdc71f2, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool CGAdMobAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult CGAdMobRegister(CGAdMobCallback cbid, s3eCallback fn, void* userData)
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[0] func: CGAdMobRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_CGAdMobRegister(cbid, fn, userData);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult CGAdMobUnRegister(CGAdMobCallback cbid, s3eCallback fn)
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[1] func: CGAdMobUnRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_CGAdMobUnRegister(cbid, fn);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void InitAdView()
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[2] func: InitAdView"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_InitAdView();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

s3eResult ShowInterstitialAd()
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[3] func: ShowInterstitialAd"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_ShowInterstitialAd();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void SetGoogleAppKey(const char* bannerAdUnitId, const char* interstatialAdUnitId)
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[4] func: SetGoogleAppKey"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_SetGoogleAppKey(bannerAdUnitId, interstatialAdUnitId);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void BannerAdLoad()
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[5] func: BannerAdLoad"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_BannerAdLoad();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void BannerAdShow()
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[6] func: BannerAdShow"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_BannerAdShow();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void BannerAdHide()
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[7] func: BannerAdHide"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_BannerAdHide();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void IsLandscape(bool landscape)
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[8] func: IsLandscape"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_IsLandscape(landscape);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void BannerAdPosition(CGAdMobPosition position)
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[9] func: BannerAdPosition"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_BannerAdPosition(position);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void TestDeviceHashedId(const char* deviceHashId)
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[10] func: TestDeviceHashedId"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_TestDeviceHashedId(deviceHashId);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void Release()
{
    IwTrace(CGADMOB_VERBOSE, ("calling CGAdMob[11] func: Release"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_Release();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}
