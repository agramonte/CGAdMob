/*
 * (C) 2001-2012 Marmalade. All Rights Reserved.
 *
 * This document is protected by copyright, and contains information
 * proprietary to Marmalade.
 *
 * This file consists of source code released by Marmalade under
 * the terms of the accompanying End User License Agreement (EULA).
 * Please do not use this program/source code before you have read the
 * EULA and have agreed to be bound by its terms.
 */
/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
#ifndef S3E_EXT_CGADMOB_H
#define S3E_EXT_CGADMOB_H

#include <s3eTypes.h>
// \cond HIDDEN_DEFINES
S3E_BEGIN_C_DECL
// \endcond

/**
 * Returns S3E_TRUE if the CGAdMob extension is available.
 */
s3eBool CGAdMobAvailable();

/**
 * Most work is done in this method. Call it after setting up the key.
 */
void InitAdView();

/**
 * Returns true if the interstitial ad ready and was displayed successfully.
 */
bool ShowInterstitialAd();

/**
* Currently only works with a max of 2 ad units. This might change in the future.
*/
void SetGoogleAppKey(const char* bannerAdUnitId, const char* interstatialAdUnitId);

/**
 * Load the ad. Needs to be called every time you need the ad refreshed.
 * Make sure you turn off auto refresh in the admob ad unit configuration.
 */
void BannerAdLoad();

/**
 * Show the banner ad.
 */
void BannerAdShow();

/**
 * Hide the banner ad.
 */
void BannerAdHide();

/**
 * Optional: True to display banner ad in Landscape mode. Default is false.
 */
void IsLandscape(bool landscape);

/**
* Optional: If not called banner will display at the top.
*/
void BannerAdPosition(int x, int y);

/**
* Optional: Sets the test device string.
*/
void TestDeviceHashedId(const char* deviceHashId);

/**
 * Release any resources.
 */
void Release();

S3E_END_C_DECL

#endif /* !S3E_EXT_CGADMOB_H */
